<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_board_planchette</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>active = false;
text = "";
textcopy = "";
textcounter = 1;
letterid = 0;
donewriting = false;

xletters[0] = 964;
xletters[1] = 847;
xletters[2] = 872;
xletters[3] = 896;
xletters[4] = 917;
xletters[5] = 943;
xletters[6] = 964;
xletters[7] = 983;
xletters[8] = 1007;
xletters[9] = 1025;
xletters[10] = 1042;
xletters[11] = 1061;
xletters[12] = 1085;
xletters[13] = 768;
xletters[14] = 804;
xletters[15] = 829;
xletters[16] = 861;
xletters[17] = 893;
xletters[18] = 922;
xletters[19] = 955;
xletters[20] = 980;
xletters[21] = 1011;
xletters[22] = 1038;
xletters[23] = 1075;
xletters[24] = 1110;
xletters[25] = 1142;
xletters[26] = 1172;

yletters[0] = 874;
yletters[1] = 850;
yletters[2] = 850;
yletters[3] = 852;
yletters[4] = 852;
yletters[5] = 850;
yletters[6] = 848;
yletters[7] = 852;
yletters[8] = 850;
yletters[9] = 848;
yletters[10] = 850;
yletters[11] = 848;
yletters[12] = 852;
yletters[13] = 908;
yletters[14] = 912;
yletters[15] = 908;
yletters[16] = 905;
yletters[17] = 910;
yletters[18] = 912;
yletters[19] = 908;
yletters[20] = 912;
yletters[21] = 905;
yletters[22] = 908;
yletters[23] = 910;
yletters[24] = 912;
yletters[25] = 908;
yletters[26] = 905;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (obj_board_controller) {
    if (global.fadeout == false) {
        fadeout = true;
        global.fadeout = true;
        switch (global.nextgame) {
            case 0: 
                if (global.p1wins &gt; global.p2wins) {
                    roomid = rom_win_p1;
                } else if (global.p1wins &lt; global.p2wins) {
                    roomid = rom_win_p2;
                } else {
                    roomid = rom_win_tie;
                }
            break;
            case 1: 
                roomid = rom_m1;
            break;
            case 2: 
                roomid = rom_m2;
            break;
            case 3: 
                roomid = rom_m3;
            break;
            case 4: 
                roomid = rom_m4;
            break;
            case 5: 
                roomid = rom_m5;
            break;
            case 6: 
                roomid = rom_m6;
            break;
        }
        yfade = -1240;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (active == true) {
    move_towards_point(xletters[letterid],yletters[letterid],point_distance(x,y,xletters[letterid],yletters[letterid])/2);
    if (point_distance(x,y,xletters[letterid],yletters[letterid]) &lt; 2) {
        //run this everytime a new letter comes up
        textcounter++;
        textcopy = textcopy + currentletter;
        //stop when done copying
        if (string_length(textcopy) == string_length(text) &amp;&amp; donewriting == false) {
            donewriting = true;
            alarm[0] = 60;
        }
        currentletter = string_char_at(text, textcounter);
        switch (currentletter) {
            case " ": letterid = 0; break;
            case "A": letterid = 1; break;
            case "B": letterid = 2; break;
            case "C": letterid = 3; break;
            case "D": letterid = 4; break;
            case "E": letterid = 5; break;
            case "F": letterid = 6; break;
            case "G": letterid = 7; break;
            case "H": letterid = 8; break;
            case "I": letterid = 9; break;
            case "J": letterid = 10; break;
            case "K": letterid = 11; break;
            case "L": letterid = 12; break;
            case "M": letterid = 13; break;
            case "N": letterid = 14; break;
            case "O": letterid = 15; break;
            case "P": letterid = 16; break;
            case "Q": letterid = 17; break;
            case "R": letterid = 18; break;
            case "S": letterid = 19; break;
            case "T": letterid = 20; break;
            case "U": letterid = 21; break;
            case "V": letterid = 22; break;
            case "W": letterid = 23; break;
            case "X": letterid = 24; break;
            case "Y": letterid = 25; break;
            case "Z": letterid = 26; break;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_font(fnt_minigamename);
draw_set_colour(c_white);
draw_text(980,478,textcopy);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
