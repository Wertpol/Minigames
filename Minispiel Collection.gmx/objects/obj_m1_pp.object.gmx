<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_mp</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

movespeed = 14;
grav = 1;
hsp = 0;
vsp = 0;
jump = 25;
image_speed = 0;
if (player == 1) {
    image_index = 0;
} else {
    image_index = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();



if (global.gamestart) {
    //React to inputs
    move = right - left;
    hsp = move * movespeed;
    if (vsp &lt; 30) {
        vsp += grav;
    }
    
    //flip sprite
    if (move &gt; 0) {
        image_index = 0;
    } else if (move &lt; 0) {
        image_index = 1;
    }
    
    if (place_meeting(x,y+1,obj_m1_wall)) {
        var yumpin = 0;
        if (action || up) {
            yumpin = 1;
        }
        vsp = yumpin * -jump;
    }
    
    //Horizontal Collision
    if (place_meeting(x+hsp,y,obj_m1_wall) || place_meeting(x+hsp,y,obj_m1_playerwall)) {
        while(!place_meeting(x+sign(hsp),y,obj_m1_wall) &amp;&amp; !place_meeting(x+sign(hsp),y,obj_m1_playerwall)) {
            x += sign(hsp);
        }
        hsp = 0;
    }
    x += hsp;
    
    
    //Vertical Collision
    if (place_meeting(x,y+vsp,obj_m1_wall))
    {
        while(!place_meeting(x,y+sign(vsp),obj_m1_wall))
        {
            y += sign(vsp);
        }
        vsp = 0;
    }
    y += vsp;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
