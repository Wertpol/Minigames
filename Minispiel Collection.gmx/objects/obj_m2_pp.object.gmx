<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_mp</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

frames = 3;
frameCount = 1;
randomCount = 0;
randomCount2 = 50;
spd = 5;
turnspeed = 5;
image_angle = irandom_range(0,360);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

//continues movement
motion_set(image_angle, spd);

if(right){
    image_angle -= turnspeed;
}

if(left){
    image_angle += turnspeed;
}

// continues movement thru walls

if(x &gt; room_width + 16){
    x -= room_width + 32;
}

if(y &gt; room_height + 16){
    y -= room_height + 32;
}

if(x &lt; - 16){
    x += room_width + 32;
}

if(y &lt; - 16){
    y += room_height + 32;
}

if(player == 1 &amp;&amp; action){

    tail = instance_create(x,y,obj_m2_p1_tail);
            with tail{
                image_angle = other.image_angle;   
            }

}

if(player == 2 &amp;&amp; action){

    tail = instance_create(x,y,obj_m2_p2_tail);
            with tail{
                image_angle = other.image_angle;   
            }

}

//Spawn tail


/*randomCount++;
randomCount2++;

frameCount++;

if(frameCount &gt; frames){
    count = 1;
}

if(frameCount == frames){
    if (player == 1) {
        if(randomCount &lt; 230){
            tail = instance_create(x,y,obj_m2_p1_tail);
            with tail{
                image_angle = other.image_angle;   
            }
        }
    }else{
        if(randomCount2 &lt; 230){
            tail = instance_create(x,y,obj_m2_p2_tail);
            with tail{
                image_angle = other.image_angle;   
            }
        }
    }
    frameCount = 1;    
}


if(randomCount == 250){
    randomCount = irandom_range(0,150);
}

if(randomCount2 == 250){
    randomCount2 = irandom_range(0,150);
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_m2_tailp">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (player == 1) {
    if (other.player = 1) {
        if (other.active == true) {
            instance_destroy();
        }
    } else {
        instance_destroy();
    }
} else {
    if (other.player = 2) {
        if (other.active == true) {
            instance_destroy();
        }
    } else {
        instance_destroy();
    }
} 

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
